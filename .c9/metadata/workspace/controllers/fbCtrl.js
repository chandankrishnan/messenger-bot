{"changed":true,"filter":false,"title":"fbCtrl.js","tooltip":"/controllers/fbCtrl.js","value":"'use strict';\n\nconst Wit=require('node-wit').Wit;\nconst express = require('express'),\n      router = express.Router(),\n      app=express(),\n      request = require('request'),\n      bodyParser=require('body-parser'),\n      Func=require('./../class/func');\n\n\nconst FB_PAGE_ID=process.env.FB_PAGE_ID,\n      FB_PAGE_TOKEN=process.env.FB_PAGE_TOKEN,\n      WIT_TOKEN=process.env.WIT_TOKEN;\n\nconst weather_dict=['weather','temp','temperature','rain'];\n\n// Messenger API specific code\n\n// See the Send API reference\n// https://developers.facebook.com/docs/messenger-platform/send-api-reference\nconst fbReq = request.defaults({\n  uri: 'https://graph.facebook.com/me/messages',\n  method: 'POST',\n  json: true,\n  qs: { access_token: FB_PAGE_TOKEN },\n  headers: {'Content-Type': 'application/json'},\n});\n\nconst fbMessage = (recipientId, msg,textOnly, cb) => {\nvar opts = {\n    form: {\n      recipient: {\n        id: recipientId,\n      },\n      message: {\n       text:msg\n      },\n    },\n  };\n\n  fbReq(opts, (err, resp, data) => {\n    if (cb) {\n      cb(err || data.error && data.error.message, data);\n    }\n  });\n};\n\n\nvar extractEntity=function(entities,entity){\n  const val = entities && entities[entity]\n  && Array.isArray(entities[entity])\n  && entities[entity].length > 0 &&\n    entities[entity][0].value;\n    if(val) return val;\n    else return false;\n\n}\n\n// See the Webhook reference\n// https://developers.facebook.com/docs/messenger-platform/webhook-reference\nconst getFirstMessagingEntry = (body) => {\n  const val = body.object == 'page' &&\n    body.entry &&\n    Array.isArray(body.entry) &&\n    body.entry.length > 0 &&\n    body.entry[0] &&\n    body.entry[0].id == FB_PAGE_ID &&\n    body.entry[0].messaging &&\n    Array.isArray(body.entry[0].messaging) &&\n    body.entry[0].messaging.length > 0 &&\n    body.entry[0].messaging[0]\n  ;\n  return val || null;\n};\n\n// Wit.ai bot specific code\n\n// This will contain all user sessions.\n// Each session has an entry:\n// sessionId -> {fbid: facebookUserId, context: sessionState}\nconst sessions = {};\n\nconst findOrCreateSession = (fbid) => {\n  let sessionId;\n  // Let's see if we already have a session for the user fbid\n  Object.keys(sessions).forEach(k => {\n    if (sessions[k].fbid === fbid) {\n      // Yep, got it!\n      sessionId = k;\n    }\n  });\n  if (!sessionId) {\n    // No session found for user fbid, let's create a new one\n    sessionId = new Date().toISOString();\n    sessions[sessionId] = {fbid: fbid, context: {}};\n    console.log(\"new session created :\" + JSON.stringify(sessions));\n  }\n  return sessionId;\n};\n\n// Our bot actions\nconst actions = {\n  say(sessionId, context, message, cb) {\n\n\n    // Our bot has something to say!\n    // Let's retrieve the Facebook user whose session belongs to\n    const recipientId = sessions[sessionId].fbid;\n    if (recipientId) {\n      // Yay, we found our recipient!\n      // Let's forward our bot response to her.\n      fbMessage(recipientId, message,true, (err, data) => {\n        if (err) {\n          console.log(\n            'Oops! An error occurred while forwarding the response to',\n            recipientId,\n            ':',\n            err\n          );\n        }\n\n        // Let's give the wheel back to our bot\n        cb();\n      });\n    } else {\n      console.log('Oops! Couldn\\'t find user for session:', sessionId);\n      // Giving the wheel back to our bot\n      cb();\n    }\n\n    console.log(\"context before action\");\n    console.log(context);\n  },\n  merge(sessionId, context, entities, message, cb) {\n    console.log(entities);\n    if(context.search_result) delete context.search_result;\n   \n    let local_query=extractEntity(entities,'local_search_query');\n   \n    let entertainment=extractEntity(entities,'entertainment');\n      if(local_query)\n      {\n        if(local_query==\"weather\") context.intent=\"weather\";\n        else context.intent=\"local_query\";\n      }\n      if(entertainment) context.intent=entertainment;\n      if(extractEntity(entities,\"location\")) context.location=extractEntity(entities,\"location\");\n   \n    console.log(\"context after merge\");\n    console.log(context);\n    cb(context);\n  },\n  error(sessionId, context, error) {\n    console.log(error.message);\n  },['find-local'](sessionId, context, cb) {\n    console.warn('firing find-local action context' + JSON.stringify(context));\n    // Here should go the api call, e.g.:\n    // context.forecast = apiCall(context.loc)\n    if(context.intent==\"weather\")\n    {\n      console.log('inside weather condition');\n      // delete context.search_result;\n      Func.weather(context.location,function(data){\n        console.log('finding weather');\n        context.search_result=data.toString();\n        console.log('searhc data set through weather event' + JSON.stringify(context));\n        context.done=true;\n        cb(context);\n      });\n    }\n    else cb(context);\n  },\n  ['find-cinema'](sessionId,context,cb)\n  {\n     if(context.intent==\"entertainment\")\n     {\n       console.log('inside find cinmea loop');\n      Func.movieTheater(\"Chembur,Mumbai\",function(data){\n        context.search_result=\"your moview list\";\n        context.done=true;\n        cb(context);\n      });\n     }\n     else cb(context);\n    \n  }\n  \n  // You should implement your custom actions here\n  // See https://wit.ai/docs/quickstart\n};\n\nconst finshSession=(sID)=>\n{\n  console.log('deleting sessions');\n  delete sessions[sID];\n}\n// Setting up our bot\nconst wit = new Wit(WIT_TOKEN, actions);\n\n\n// Facebook Webhook\nrouter.get('/webhook', function (req, res) {\n    console.warn('authentication called');\n    if (req.query['hub.verify_token'] === 'testbot_verify_token') {\n        res.send(req.query['hub.challenge']);\n    } else {\n        res.send('Invalid verify token');\n    }\n});\n\n\n// Message handler\nrouter.post('/webhook', (req, res) => {\n  // Parsing the Messenger API response\n  console.log(\"reached inside hook post\");\n  const messaging = getFirstMessagingEntry(req.body);\n  if (messaging && messaging.message && messaging.recipient.id == FB_PAGE_ID) {\n    // Yay! We got a new message!\n    // We retrieve the Facebook user ID of the sender\n    const sender = messaging.sender.id;\n\n    // We retrieve the user's current session, or create one if it doesn't exist\n    // This is needed for our bot to figure out the conversation history\n    const sessionId = findOrCreateSession(sender);\n\n    // We retrieve the message content\n    const msg = messaging.message.text;\n    const atts = messaging.message.attachments;\n\n    if (atts) {\n      // We received an attachment\n\n      // Let's reply with an automatic message\n      fbMessage(\n        sender,\n        'Sorry I can only process text messages for now.',\n        true\n      );\n    } else if (msg) {\n      // We received a text message\n      // Let's forward the message to the Wit.ai Bot Engine\n      // This will run all actions until our bot has nothing left to do\n      wit.runActions(\n        sessionId, // the user's current session\n        msg, // the user's message\n        sessions[sessionId].context, // the user's current session state\n        (error, context) => {\n          if (error) {\n            console.log('Oops! Got an error from Wit:', error);\n          } else {\n            // Our bot did everything it has to do.\n            // Now it's waiting for further messages to proceed.\n            console.log('Waiting for futher messages.');\n\n            // Based on the session state, you might want to reset the session.\n            // This depends heavily on the business logic of your bot.\n            // Example:\n            if (context['done']) {\n              delete sessions[sessionId];\n            }\n\n            // Updating the user's current session state\n            sessions[sessionId].context = context;\n          }\n        }\n      );\n    }\n  }\n  res.sendStatus(200);\n});\nmodule.exports = router;\n","undoManager":{"mark":96,"position":100,"stack":[[{"start":{"row":160,"column":8},"end":{"row":160,"column":9},"action":"insert","lines":["n"],"id":4202}],[{"start":{"row":160,"column":9},"end":{"row":160,"column":10},"action":"insert","lines":["s"],"id":4203}],[{"start":{"row":160,"column":10},"end":{"row":160,"column":11},"action":"insert","lines":["o"],"id":4204}],[{"start":{"row":160,"column":11},"end":{"row":160,"column":12},"action":"insert","lines":["l"],"id":4205}],[{"start":{"row":160,"column":12},"end":{"row":160,"column":13},"action":"insert","lines":["e"],"id":4206}],[{"start":{"row":160,"column":13},"end":{"row":160,"column":14},"action":"insert","lines":["."],"id":4207}],[{"start":{"row":160,"column":14},"end":{"row":160,"column":15},"action":"insert","lines":["l"],"id":4208}],[{"start":{"row":160,"column":15},"end":{"row":160,"column":16},"action":"insert","lines":["o"],"id":4209}],[{"start":{"row":160,"column":16},"end":{"row":160,"column":17},"action":"insert","lines":["g"],"id":4210}],[{"start":{"row":160,"column":17},"end":{"row":160,"column":19},"action":"insert","lines":["()"],"id":4211}],[{"start":{"row":160,"column":18},"end":{"row":160,"column":20},"action":"insert","lines":["''"],"id":4212}],[{"start":{"row":160,"column":19},"end":{"row":160,"column":20},"action":"insert","lines":["i"],"id":4213}],[{"start":{"row":160,"column":20},"end":{"row":160,"column":21},"action":"insert","lines":["n"],"id":4214}],[{"start":{"row":160,"column":21},"end":{"row":160,"column":22},"action":"insert","lines":["s"],"id":4215}],[{"start":{"row":160,"column":22},"end":{"row":160,"column":23},"action":"insert","lines":["i"],"id":4216}],[{"start":{"row":160,"column":23},"end":{"row":160,"column":24},"action":"insert","lines":["d"],"id":4217}],[{"start":{"row":160,"column":24},"end":{"row":160,"column":25},"action":"insert","lines":["e"],"id":4218}],[{"start":{"row":160,"column":25},"end":{"row":160,"column":26},"action":"insert","lines":[" "],"id":4219}],[{"start":{"row":160,"column":26},"end":{"row":160,"column":27},"action":"insert","lines":["w"],"id":4220}],[{"start":{"row":160,"column":27},"end":{"row":160,"column":28},"action":"insert","lines":["e"],"id":4221}],[{"start":{"row":160,"column":28},"end":{"row":160,"column":29},"action":"insert","lines":["a"],"id":4222}],[{"start":{"row":160,"column":29},"end":{"row":160,"column":30},"action":"insert","lines":["t"],"id":4223}],[{"start":{"row":160,"column":30},"end":{"row":160,"column":31},"action":"insert","lines":["h"],"id":4224}],[{"start":{"row":160,"column":31},"end":{"row":160,"column":32},"action":"insert","lines":["e"],"id":4225}],[{"start":{"row":160,"column":32},"end":{"row":160,"column":33},"action":"insert","lines":["r"],"id":4226}],[{"start":{"row":160,"column":33},"end":{"row":160,"column":34},"action":"insert","lines":[" "],"id":4227}],[{"start":{"row":160,"column":34},"end":{"row":160,"column":35},"action":"insert","lines":["c"],"id":4228}],[{"start":{"row":160,"column":35},"end":{"row":160,"column":36},"action":"insert","lines":["o"],"id":4229}],[{"start":{"row":160,"column":36},"end":{"row":160,"column":37},"action":"insert","lines":["n"],"id":4230}],[{"start":{"row":160,"column":37},"end":{"row":160,"column":38},"action":"insert","lines":["d"],"id":4231}],[{"start":{"row":160,"column":38},"end":{"row":160,"column":39},"action":"insert","lines":["i"],"id":4232}],[{"start":{"row":160,"column":39},"end":{"row":160,"column":40},"action":"insert","lines":["t"],"id":4233}],[{"start":{"row":160,"column":40},"end":{"row":160,"column":41},"action":"insert","lines":["i"],"id":4234}],[{"start":{"row":160,"column":41},"end":{"row":160,"column":42},"action":"insert","lines":["o"],"id":4235}],[{"start":{"row":160,"column":42},"end":{"row":160,"column":43},"action":"insert","lines":["n"],"id":4236}],[{"start":{"row":160,"column":45},"end":{"row":160,"column":46},"action":"insert","lines":[";"],"id":4237}],[{"start":{"row":162,"column":51},"end":{"row":163,"column":0},"action":"insert","lines":["",""],"id":4238},{"start":{"row":163,"column":0},"end":{"row":163,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":163,"column":8},"end":{"row":163,"column":9},"action":"insert","lines":["c"],"id":4239}],[{"start":{"row":163,"column":9},"end":{"row":163,"column":10},"action":"insert","lines":["o"],"id":4240}],[{"start":{"row":163,"column":10},"end":{"row":163,"column":11},"action":"insert","lines":["n"],"id":4241}],[{"start":{"row":163,"column":11},"end":{"row":163,"column":12},"action":"insert","lines":["s"],"id":4242}],[{"start":{"row":163,"column":12},"end":{"row":163,"column":13},"action":"insert","lines":["o"],"id":4243}],[{"start":{"row":163,"column":13},"end":{"row":163,"column":14},"action":"insert","lines":["e"],"id":4244}],[{"start":{"row":163,"column":14},"end":{"row":163,"column":15},"action":"insert","lines":["l"],"id":4245}],[{"start":{"row":163,"column":14},"end":{"row":163,"column":15},"action":"remove","lines":["l"],"id":4246}],[{"start":{"row":163,"column":13},"end":{"row":163,"column":14},"action":"remove","lines":["e"],"id":4247}],[{"start":{"row":163,"column":13},"end":{"row":163,"column":14},"action":"insert","lines":["l"],"id":4248}],[{"start":{"row":163,"column":14},"end":{"row":163,"column":15},"action":"insert","lines":["e"],"id":4249}],[{"start":{"row":163,"column":15},"end":{"row":163,"column":16},"action":"insert","lines":["."],"id":4250}],[{"start":{"row":163,"column":16},"end":{"row":163,"column":17},"action":"insert","lines":["l"],"id":4251}],[{"start":{"row":163,"column":17},"end":{"row":163,"column":18},"action":"insert","lines":["o"],"id":4252}],[{"start":{"row":163,"column":18},"end":{"row":163,"column":19},"action":"insert","lines":["g"],"id":4253}],[{"start":{"row":163,"column":19},"end":{"row":163,"column":21},"action":"insert","lines":["()"],"id":4254}],[{"start":{"row":163,"column":20},"end":{"row":163,"column":22},"action":"insert","lines":["''"],"id":4255}],[{"start":{"row":163,"column":21},"end":{"row":163,"column":22},"action":"insert","lines":["f"],"id":4256}],[{"start":{"row":163,"column":22},"end":{"row":163,"column":23},"action":"insert","lines":["i"],"id":4257}],[{"start":{"row":163,"column":23},"end":{"row":163,"column":24},"action":"insert","lines":["n"],"id":4258}],[{"start":{"row":163,"column":24},"end":{"row":163,"column":25},"action":"insert","lines":["d"],"id":4259}],[{"start":{"row":163,"column":25},"end":{"row":163,"column":26},"action":"insert","lines":["i"],"id":4260}],[{"start":{"row":163,"column":26},"end":{"row":163,"column":27},"action":"insert","lines":["n"],"id":4261}],[{"start":{"row":163,"column":27},"end":{"row":163,"column":28},"action":"insert","lines":["g"],"id":4262}],[{"start":{"row":163,"column":28},"end":{"row":163,"column":29},"action":"insert","lines":[" "],"id":4263}],[{"start":{"row":163,"column":29},"end":{"row":163,"column":30},"action":"insert","lines":["w"],"id":4264}],[{"start":{"row":163,"column":30},"end":{"row":163,"column":31},"action":"insert","lines":["e"],"id":4265}],[{"start":{"row":163,"column":31},"end":{"row":163,"column":32},"action":"insert","lines":["a"],"id":4266}],[{"start":{"row":163,"column":32},"end":{"row":163,"column":33},"action":"insert","lines":["t"],"id":4267}],[{"start":{"row":163,"column":33},"end":{"row":163,"column":34},"action":"insert","lines":["h"],"id":4268}],[{"start":{"row":163,"column":34},"end":{"row":163,"column":35},"action":"insert","lines":["e"],"id":4269}],[{"start":{"row":163,"column":35},"end":{"row":163,"column":36},"action":"insert","lines":["r"],"id":4270}],[{"start":{"row":163,"column":38},"end":{"row":163,"column":39},"action":"insert","lines":[";"],"id":4271}],[{"start":{"row":155,"column":42},"end":{"row":155,"column":43},"action":"insert","lines":[" "],"id":4272}],[{"start":{"row":155,"column":43},"end":{"row":155,"column":44},"action":"insert","lines":["c"],"id":4273}],[{"start":{"row":155,"column":44},"end":{"row":155,"column":45},"action":"insert","lines":["o"],"id":4274}],[{"start":{"row":155,"column":45},"end":{"row":155,"column":46},"action":"insert","lines":["n"],"id":4275}],[{"start":{"row":155,"column":46},"end":{"row":155,"column":47},"action":"insert","lines":["t"],"id":4276}],[{"start":{"row":155,"column":47},"end":{"row":155,"column":48},"action":"insert","lines":["e"],"id":4277}],[{"start":{"row":155,"column":48},"end":{"row":155,"column":49},"action":"insert","lines":["x"],"id":4278}],[{"start":{"row":155,"column":49},"end":{"row":155,"column":50},"action":"insert","lines":["t"],"id":4279}],[{"start":{"row":155,"column":51},"end":{"row":155,"column":52},"action":"insert","lines":[" "],"id":4280}],[{"start":{"row":155,"column":52},"end":{"row":155,"column":53},"action":"insert","lines":["+"],"id":4281}],[{"start":{"row":155,"column":53},"end":{"row":155,"column":54},"action":"insert","lines":[" "],"id":4282}],[{"start":{"row":155,"column":54},"end":{"row":155,"column":55},"action":"insert","lines":["J"],"id":4283}],[{"start":{"row":155,"column":55},"end":{"row":155,"column":56},"action":"insert","lines":["S"],"id":4284}],[{"start":{"row":155,"column":56},"end":{"row":155,"column":57},"action":"insert","lines":["O"],"id":4285}],[{"start":{"row":155,"column":57},"end":{"row":155,"column":58},"action":"insert","lines":["N"],"id":4286}],[{"start":{"row":155,"column":58},"end":{"row":155,"column":59},"action":"insert","lines":["."],"id":4287}],[{"start":{"row":155,"column":59},"end":{"row":155,"column":60},"action":"insert","lines":["s"],"id":4288}],[{"start":{"row":155,"column":60},"end":{"row":155,"column":61},"action":"insert","lines":["t"],"id":4289}],[{"start":{"row":155,"column":61},"end":{"row":155,"column":62},"action":"insert","lines":["r"],"id":4290}],[{"start":{"row":155,"column":59},"end":{"row":155,"column":62},"action":"remove","lines":["str"],"id":4291},{"start":{"row":155,"column":59},"end":{"row":155,"column":70},"action":"insert","lines":["stringify()"]}],[{"start":{"row":155,"column":69},"end":{"row":155,"column":70},"action":"insert","lines":["c"],"id":4292}],[{"start":{"row":155,"column":70},"end":{"row":155,"column":71},"action":"insert","lines":["o"],"id":4293}],[{"start":{"row":155,"column":71},"end":{"row":155,"column":72},"action":"insert","lines":["n"],"id":4294}],[{"start":{"row":155,"column":72},"end":{"row":155,"column":73},"action":"insert","lines":["t"],"id":4295}],[{"start":{"row":155,"column":73},"end":{"row":155,"column":74},"action":"insert","lines":["e"],"id":4296}],[{"start":{"row":155,"column":69},"end":{"row":155,"column":74},"action":"remove","lines":["conte"],"id":4297},{"start":{"row":155,"column":69},"end":{"row":155,"column":76},"action":"insert","lines":["context"]}],[{"start":{"row":137,"column":3},"end":{"row":137,"column":45},"action":"remove","lines":[" if(context.intent) delete context.intent;"],"id":4298}],[{"start":{"row":137,"column":3},"end":{"row":138,"column":0},"action":"remove","lines":["",""],"id":4299}],[{"start":{"row":139,"column":3},"end":{"row":140,"column":0},"action":"insert","lines":["",""],"id":4300},{"start":{"row":140,"column":0},"end":{"row":140,"column":3},"action":"insert","lines":["   "]}],[{"start":{"row":147,"column":4},"end":{"row":147,"column":6},"action":"insert","lines":["  "],"id":4301}],[{"start":{"row":148,"column":3},"end":{"row":149,"column":0},"action":"insert","lines":["",""],"id":4302},{"start":{"row":149,"column":0},"end":{"row":149,"column":3},"action":"insert","lines":["   "]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":2085.5,"scrollleft":0,"selection":{"start":{"row":149,"column":3},"end":{"row":149,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":138,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1465399978109}