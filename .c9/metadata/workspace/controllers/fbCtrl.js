{"filter":false,"title":"fbCtrl.js","tooltip":"/controllers/fbCtrl.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":149,"column":11},"end":{"row":149,"column":12},"action":"insert","lines":["."],"id":3639}],[{"start":{"row":149,"column":12},"end":{"row":149,"column":13},"action":"insert","lines":["l"],"id":3640}],[{"start":{"row":149,"column":13},"end":{"row":149,"column":14},"action":"insert","lines":["o"],"id":3641}],[{"start":{"row":149,"column":14},"end":{"row":149,"column":15},"action":"insert","lines":["g"],"id":3642}],[{"start":{"row":149,"column":15},"end":{"row":149,"column":17},"action":"insert","lines":["()"],"id":3643}],[{"start":{"row":149,"column":16},"end":{"row":149,"column":18},"action":"insert","lines":["\"\""],"id":3644}],[{"start":{"row":149,"column":16},"end":{"row":149,"column":18},"action":"remove","lines":["\"\""],"id":3645}],[{"start":{"row":149,"column":16},"end":{"row":149,"column":17},"action":"insert","lines":["c"],"id":3646}],[{"start":{"row":149,"column":17},"end":{"row":149,"column":18},"action":"insert","lines":["o"],"id":3647}],[{"start":{"row":149,"column":18},"end":{"row":149,"column":19},"action":"insert","lines":["n"],"id":3648}],[{"start":{"row":149,"column":19},"end":{"row":149,"column":20},"action":"insert","lines":["t"],"id":3649}],[{"start":{"row":149,"column":20},"end":{"row":149,"column":21},"action":"insert","lines":["e"],"id":3650}],[{"start":{"row":149,"column":21},"end":{"row":149,"column":22},"action":"insert","lines":["x"],"id":3651}],[{"start":{"row":149,"column":16},"end":{"row":149,"column":22},"action":"remove","lines":["contex"],"id":3652},{"start":{"row":149,"column":16},"end":{"row":149,"column":23},"action":"insert","lines":["context"]}],[{"start":{"row":149,"column":24},"end":{"row":149,"column":25},"action":"insert","lines":[";"],"id":3653}],[{"start":{"row":147,"column":5},"end":{"row":148,"column":0},"action":"insert","lines":["",""],"id":3654},{"start":{"row":148,"column":0},"end":{"row":148,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":148,"column":4},"end":{"row":148,"column":5},"action":"insert","lines":["i"],"id":3655}],[{"start":{"row":148,"column":5},"end":{"row":148,"column":6},"action":"insert","lines":["f"],"id":3656}],[{"start":{"row":148,"column":6},"end":{"row":148,"column":8},"action":"insert","lines":["()"],"id":3657}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":8},"action":"insert","lines":["c"],"id":3658}],[{"start":{"row":148,"column":8},"end":{"row":148,"column":9},"action":"insert","lines":["o"],"id":3659}],[{"start":{"row":148,"column":9},"end":{"row":148,"column":10},"action":"insert","lines":["n"],"id":3660}],[{"start":{"row":148,"column":10},"end":{"row":148,"column":11},"action":"insert","lines":["t"],"id":3661}],[{"start":{"row":148,"column":11},"end":{"row":148,"column":12},"action":"insert","lines":["e"],"id":3662}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":12},"action":"remove","lines":["conte"],"id":3663},{"start":{"row":148,"column":7},"end":{"row":148,"column":14},"action":"insert","lines":["context"]}],[{"start":{"row":148,"column":14},"end":{"row":148,"column":16},"action":"insert","lines":["[]"],"id":3664}],[{"start":{"row":148,"column":15},"end":{"row":148,"column":17},"action":"insert","lines":["''"],"id":3665}],[{"start":{"row":148,"column":16},"end":{"row":148,"column":17},"action":"insert","lines":["l"],"id":3666}],[{"start":{"row":148,"column":17},"end":{"row":148,"column":18},"action":"insert","lines":["o"],"id":3667}],[{"start":{"row":148,"column":18},"end":{"row":148,"column":19},"action":"insert","lines":["c"],"id":3668}],[{"start":{"row":148,"column":19},"end":{"row":148,"column":20},"action":"insert","lines":["a"],"id":3669}],[{"start":{"row":148,"column":20},"end":{"row":148,"column":21},"action":"insert","lines":["t"],"id":3670}],[{"start":{"row":148,"column":21},"end":{"row":148,"column":22},"action":"insert","lines":["i"],"id":3671}],[{"start":{"row":148,"column":22},"end":{"row":148,"column":23},"action":"insert","lines":["o"],"id":3672}],[{"start":{"row":148,"column":23},"end":{"row":148,"column":24},"action":"insert","lines":["n"],"id":3673}],[{"start":{"row":148,"column":27},"end":{"row":148,"column":28},"action":"insert","lines":[" "],"id":3674}],[{"start":{"row":148,"column":28},"end":{"row":148,"column":29},"action":"insert","lines":["c"],"id":3675}],[{"start":{"row":148,"column":29},"end":{"row":148,"column":30},"action":"insert","lines":["o"],"id":3676}],[{"start":{"row":148,"column":30},"end":{"row":148,"column":31},"action":"insert","lines":["n"],"id":3677}],[{"start":{"row":148,"column":31},"end":{"row":148,"column":32},"action":"insert","lines":["t"],"id":3678}],[{"start":{"row":148,"column":28},"end":{"row":148,"column":32},"action":"remove","lines":["cont"],"id":3679},{"start":{"row":148,"column":28},"end":{"row":148,"column":35},"action":"insert","lines":["context"]}],[{"start":{"row":148,"column":35},"end":{"row":148,"column":36},"action":"insert","lines":["."],"id":3680}],[{"start":{"row":148,"column":36},"end":{"row":148,"column":37},"action":"insert","lines":["l"],"id":3681}],[{"start":{"row":148,"column":37},"end":{"row":148,"column":38},"action":"insert","lines":["o"],"id":3682}],[{"start":{"row":148,"column":38},"end":{"row":148,"column":39},"action":"insert","lines":["c"],"id":3683}],[{"start":{"row":148,"column":39},"end":{"row":148,"column":40},"action":"insert","lines":["a"],"id":3684}],[{"start":{"row":148,"column":36},"end":{"row":148,"column":40},"action":"remove","lines":["loca"],"id":3685},{"start":{"row":148,"column":36},"end":{"row":148,"column":44},"action":"insert","lines":["location"]}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":26},"action":"remove","lines":["context['location']"],"id":3686},{"start":{"row":148,"column":7},"end":{"row":148,"column":8},"action":"insert","lines":["g"]}],[{"start":{"row":148,"column":8},"end":{"row":148,"column":9},"action":"insert","lines":["e"],"id":3687}],[{"start":{"row":148,"column":9},"end":{"row":148,"column":10},"action":"insert","lines":["t"],"id":3688}],[{"start":{"row":148,"column":9},"end":{"row":148,"column":10},"action":"remove","lines":["t"],"id":3689}],[{"start":{"row":148,"column":8},"end":{"row":148,"column":9},"action":"remove","lines":["e"],"id":3690}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":8},"action":"remove","lines":["g"],"id":3691}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":8},"action":"insert","lines":["e"],"id":3692}],[{"start":{"row":148,"column":8},"end":{"row":148,"column":9},"action":"insert","lines":["x"],"id":3693}],[{"start":{"row":148,"column":9},"end":{"row":148,"column":10},"action":"insert","lines":["t"],"id":3694}],[{"start":{"row":148,"column":10},"end":{"row":148,"column":11},"action":"insert","lines":["r"],"id":3695}],[{"start":{"row":148,"column":7},"end":{"row":148,"column":11},"action":"remove","lines":["extr"],"id":3696},{"start":{"row":148,"column":7},"end":{"row":148,"column":22},"action":"insert","lines":["extractEntity()"]}],[{"start":{"row":148,"column":21},"end":{"row":148,"column":22},"action":"insert","lines":["e"],"id":3697}],[{"start":{"row":148,"column":22},"end":{"row":148,"column":23},"action":"insert","lines":["n"],"id":3698}],[{"start":{"row":148,"column":23},"end":{"row":148,"column":24},"action":"insert","lines":["t"],"id":3699}],[{"start":{"row":148,"column":21},"end":{"row":148,"column":24},"action":"remove","lines":["ent"],"id":3700},{"start":{"row":148,"column":21},"end":{"row":148,"column":29},"action":"insert","lines":["entities"]}],[{"start":{"row":148,"column":29},"end":{"row":148,"column":30},"action":"insert","lines":[","],"id":3701}],[{"start":{"row":148,"column":30},"end":{"row":148,"column":32},"action":"insert","lines":["\"\""],"id":3702}],[{"start":{"row":148,"column":31},"end":{"row":148,"column":32},"action":"insert","lines":["l"],"id":3703}],[{"start":{"row":148,"column":32},"end":{"row":148,"column":33},"action":"insert","lines":["o"],"id":3704}],[{"start":{"row":148,"column":33},"end":{"row":148,"column":34},"action":"insert","lines":["c"],"id":3705}],[{"start":{"row":148,"column":34},"end":{"row":148,"column":35},"action":"insert","lines":["a"],"id":3706}],[{"start":{"row":148,"column":35},"end":{"row":148,"column":36},"action":"insert","lines":["t"],"id":3707}],[{"start":{"row":148,"column":36},"end":{"row":148,"column":37},"action":"insert","lines":["i"],"id":3708}],[{"start":{"row":148,"column":37},"end":{"row":148,"column":38},"action":"insert","lines":["o"],"id":3709}],[{"start":{"row":148,"column":38},"end":{"row":148,"column":39},"action":"insert","lines":["n"],"id":3710}],[{"start":{"row":148,"column":59},"end":{"row":148,"column":60},"action":"insert","lines":["="],"id":3711}],[{"start":{"row":148,"column":60},"end":{"row":148,"column":94},"action":"insert","lines":["extractEntity(entities,\"location\")"],"id":3712}],[{"start":{"row":148,"column":94},"end":{"row":148,"column":95},"action":"insert","lines":[";"],"id":3713}],[{"start":{"row":176,"column":39},"end":{"row":177,"column":0},"action":"insert","lines":["",""],"id":3714},{"start":{"row":177,"column":0},"end":{"row":177,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":177,"column":2},"end":{"row":177,"column":3},"action":"insert","lines":["c"],"id":3715}],[{"start":{"row":177,"column":3},"end":{"row":177,"column":4},"action":"insert","lines":["o"],"id":3716}],[{"start":{"row":177,"column":4},"end":{"row":177,"column":5},"action":"insert","lines":["n"],"id":3717}],[{"start":{"row":177,"column":5},"end":{"row":177,"column":6},"action":"insert","lines":["s"],"id":3718}],[{"start":{"row":177,"column":2},"end":{"row":177,"column":6},"action":"remove","lines":["cons"],"id":3719},{"start":{"row":177,"column":2},"end":{"row":177,"column":9},"action":"insert","lines":["console"]}],[{"start":{"row":177,"column":9},"end":{"row":177,"column":10},"action":"insert","lines":["."],"id":3720}],[{"start":{"row":177,"column":10},"end":{"row":177,"column":11},"action":"insert","lines":["l"],"id":3721}],[{"start":{"row":177,"column":11},"end":{"row":177,"column":12},"action":"insert","lines":["o"],"id":3722}],[{"start":{"row":177,"column":12},"end":{"row":177,"column":13},"action":"insert","lines":["g"],"id":3723}],[{"start":{"row":177,"column":13},"end":{"row":177,"column":15},"action":"insert","lines":["()"],"id":3724}],[{"start":{"row":177,"column":14},"end":{"row":177,"column":16},"action":"insert","lines":["\"\""],"id":3725}],[{"start":{"row":177,"column":15},"end":{"row":177,"column":16},"action":"insert","lines":["r"],"id":3726}],[{"start":{"row":177,"column":16},"end":{"row":177,"column":17},"action":"insert","lines":["e"],"id":3727}],[{"start":{"row":177,"column":17},"end":{"row":177,"column":18},"action":"insert","lines":["a"],"id":3728}],[{"start":{"row":177,"column":18},"end":{"row":177,"column":19},"action":"insert","lines":["c"],"id":3729}],[{"start":{"row":177,"column":19},"end":{"row":177,"column":20},"action":"insert","lines":["h"],"id":3730}],[{"start":{"row":177,"column":20},"end":{"row":177,"column":21},"action":"insert","lines":["e"],"id":3731}],[{"start":{"row":177,"column":21},"end":{"row":177,"column":22},"action":"insert","lines":["d"],"id":3732}],[{"start":{"row":177,"column":22},"end":{"row":177,"column":23},"action":"insert","lines":[" "],"id":3733}],[{"start":{"row":177,"column":23},"end":{"row":177,"column":24},"action":"insert","lines":["i"],"id":3734}],[{"start":{"row":177,"column":24},"end":{"row":177,"column":25},"action":"insert","lines":["n"],"id":3735}],[{"start":{"row":177,"column":27},"end":{"row":177,"column":28},"action":"insert","lines":[";"],"id":3736}],[{"start":{"row":175,"column":10},"end":{"row":175,"column":13},"action":"remove","lines":["/fb"],"id":3737},{"start":{"row":175,"column":10},"end":{"row":175,"column":18},"action":"insert","lines":["/webhook"]}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":3738,"ignore":true},{"start":{"row":16,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["=======","","const FB_PAGE_ID=process.env.FB_PAGE_ID,","      FB_PAGE_TOKEN=process.env.FB_PAGE_TOKEN,","      WIT_TOKEN=process.env.WIT_TOKEN;","","const weather_dict=['weather','temp','temperature','rain'];","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":37,"column":36},"end":{"row":37,"column":45},"action":"insert","lines":["textOnly,"]},{"start":{"row":38,"column":0},"end":{"row":38,"column":7},"action":"remove","lines":["  const"]},{"start":{"row":38,"column":0},"end":{"row":54,"column":1},"action":"insert","lines":["var opts={};","if(textOnly)","{","  opts = {","    form: {","      recipient: {","        id: recipientId,","      },","      message: {","       text:msg","      },","    },","  };","}","else {","  console.log('executing 2nd opts');"," "]},{"start":{"row":60,"column":6},"end":{"row":60,"column":13},"action":"remove","lines":["  text:"]},{"start":{"row":60,"column":10},"end":{"row":60,"column":11},"action":"remove","lines":[","]},{"start":{"row":64,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["}","  console.log(JSON.stringify(opts));","",""]},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":86,"column":0},"end":{"row":97,"column":0},"action":"insert","lines":["=======","  const val = entities && entities[entity]","  && Array.isArray(entities[entity])","  && entities[entity].length > 0 &&","    entities[entity][0].value;","","    console.log('value is ' + val);","    if(val) return val;","    else return false;","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":144,"column":0},"end":{"row":145,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":149,"column":0},"end":{"row":153,"column":0},"action":"insert","lines":["=======","","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":159,"column":0},"end":{"row":160,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":161,"column":0},"end":{"row":164,"column":0},"action":"insert","lines":["=======","      fbMessage(recipientId, message,true, (err, data) => {",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":181,"column":0},"end":{"row":182,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":201,"column":0},"end":{"row":222,"column":0},"action":"insert","lines":["=======","","    console.log(\"context before action\");","    console.log(context);","  },","  merge(sessionId, context, entities, message, cb) {","    console.log(entities);","    if(context.search_result) delete context.search_result;","    if(context.intent) delete context.intent;","","    let local_query=extractEntity(entities,'local_search_query');","    let entertainment=extractEntity(entities,'entertainment');","      if(local_query)","      {","        if(local_query==\"weather\") context.intent=\"weather\";","        else context.intent=\"local_query\";","      }","      if(entertainment) context.intent=entertainment;","    if(extractEntity(entities,\"location\")) context.location=extractEntity(entities,\"location\");","    console.log(\"context after merge\");",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":227,"column":0},"end":{"row":228,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":232,"column":0},"end":{"row":283,"column":0},"action":"insert","lines":["=======","  },['find-local'](sessionId, context, cb) {","    console.warn('firing find-local action');","    // Here should go the api call, e.g.:","    // context.forecast = apiCall(context.loc)","    if(context.intent==\"weather\")","    {","      // delete context.search_result;","      Func.weather(context.location,function(data){","        context.search_result=data.toString();","        console.log('searhc data set through weather event' + JSON.stringify(context));","        context.done=true;","        cb(context);","      });","    }","    else if(context.intent==\"local_query\")","    {","","    }","    else cb(context);","  },","  ['find-cinema'](sessionId,context,cb){","    Func.movieTheater(\"Chembur,Mumbai\",function(data){","      context.search_result=\"your moview list\";","      context.done=true;","","      fbMessage(sessions[sessionId].fbid, data,false, (err, data) => {","        if (err) {","          console.log(","            'Oops! An error occurred while forwarding the response to',","            sessions[sessionId].fbid,","            ':',","            err","          );","        }","    });","      console.log(data);","      cb(context);","    });","","  }","  // You should implement your custom actions here","  // See https://wit.ai/docs/quickstart","};","","const finshSession=(sID)=>","{","  console.log('deleting sessions');","  delete sessions[sID];","}",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":299,"column":0},"end":{"row":300,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""]},{"start":{"row":301,"column":0},"end":{"row":304,"column":0},"action":"insert","lines":["=======","router.post('/webhook', (req, res) => {",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf",""]},{"start":{"row":327,"column":57},"end":{"row":328,"column":12},"action":"insert","lines":[",","        true"]},{"start":{"row":337,"column":34},"end":{"row":337,"column":35},"action":"remove","lines":[" "]},{"start":{"row":350,"column":11},"end":{"row":350,"column":14},"action":"remove","lines":[" //"]},{"start":{"row":351,"column":12},"end":{"row":351,"column":14},"action":"remove","lines":["//"]},{"start":{"row":351,"column":14},"end":{"row":351,"column":15},"action":"remove","lines":[" "]},{"start":{"row":352,"column":11},"end":{"row":352,"column":14},"action":"remove","lines":[" //"]}],[{"start":{"row":0,"column":0},"end":{"row":366,"column":0},"action":"remove","lines":["'use strict';","","const Wit=require('node-wit').Wit;","const express = require('express'),","      router = express.Router(),","      app=express(),","      request = require('request'),","      bodyParser=require('body-parser'),","      Func=require('./../class/func');","","<<<<<<< HEAD","    ","const FB_PAGE_ID=process.env.FB_PAGE_ID,","      FB_PAGE_TOKEN=process.env.FB_PAGE_TOKEN,","      WIT_TOKEN=process.env.WIT_TOKEN;","    ","=======","","const FB_PAGE_ID=process.env.FB_PAGE_ID,","      FB_PAGE_TOKEN=process.env.FB_PAGE_TOKEN,","      WIT_TOKEN=process.env.WIT_TOKEN;","","const weather_dict=['weather','temp','temperature','rain'];","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","// Messenger API specific code","","// See the Send API reference","// https://developers.facebook.com/docs/messenger-platform/send-api-reference","const fbReq = request.defaults({","  uri: 'https://graph.facebook.com/me/messages',","  method: 'POST',","  json: true,","  qs: { access_token: FB_PAGE_TOKEN },","  headers: {'Content-Type': 'application/json'},","});","","const fbMessage = (recipientId, msg,textOnly, cb) => {","var opts={};","if(textOnly)","{","  opts = {","    form: {","      recipient: {","        id: recipientId,","      },","      message: {","       text:msg","      },","    },","  };","}","else {","  console.log('executing 2nd opts');","  opts = {","    form: {","      recipient: {","        id: recipientId,","      },","      message: {","       msg","      },","    },","  };","}","  console.log(JSON.stringify(opts));","","  fbReq(opts, (err, resp, data) => {","    if (cb) {","      cb(err || data.error && data.error.message, data);","    }","  });","};","","","var extractEntity=function(entities,entity){","<<<<<<< HEAD","  const val = entities && entities[entity] ","  && Array.isArray(entities[entity])","  && entities[entity].length > 0 &&","    entities[entity][0].value;","    ","    console.log('value is ' + val);","    if(val) return val;","    else return false;","  ","=======","  const val = entities && entities[entity]","  && Array.isArray(entities[entity])","  && entities[entity].length > 0 &&","    entities[entity][0].value;","","    console.log('value is ' + val);","    if(val) return val;","    else return false;","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","}","","// See the Webhook reference","// https://developers.facebook.com/docs/messenger-platform/webhook-reference","const getFirstMessagingEntry = (body) => {","  const val = body.object == 'page' &&","    body.entry &&","    Array.isArray(body.entry) &&","    body.entry.length > 0 &&","    body.entry[0] &&","    body.entry[0].id == FB_PAGE_ID &&","    body.entry[0].messaging &&","    Array.isArray(body.entry[0].messaging) &&","    body.entry[0].messaging.length > 0 &&","    body.entry[0].messaging[0]","  ;","  return val || null;","};","","// Wit.ai bot specific code","","// This will contain all user sessions.","// Each session has an entry:","// sessionId -> {fbid: facebookUserId, context: sessionState}","const sessions = {};","","const findOrCreateSession = (fbid) => {","  let sessionId;","  // Let's see if we already have a session for the user fbid","  Object.keys(sessions).forEach(k => {","    if (sessions[k].fbid === fbid) {","      // Yep, got it!","      sessionId = k;","    }","  });","  if (!sessionId) {","    // No session found for user fbid, let's create a new one","    sessionId = new Date().toISOString();","    sessions[sessionId] = {fbid: fbid, context: {}};","    console.log(\"new session created :\" + JSON.stringify(sessions));","  }","  return sessionId;","};","","// Our bot actions","const actions = {","  say(sessionId, context, message, cb) {","<<<<<<< HEAD","    ","    console.log(\"context before\");","    console.log(context);","    ","=======","","",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","    // Our bot has something to say!","    // Let's retrieve the Facebook user whose session belongs to","    const recipientId = sessions[sessionId].fbid;","    if (recipientId) {","      // Yay, we found our recipient!","      // Let's forward our bot response to her.","<<<<<<< HEAD","      fbMessage(recipientId, message, (err, data) => {","=======","      fbMessage(recipientId, message,true, (err, data) => {",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","        if (err) {","          console.log(","            'Oops! An error occurred while forwarding the response to',","            recipientId,","            ':',","            err","          );","        }","","        // Let's give the wheel back to our bot","        cb();","      });","    } else {","      console.log('Oops! Couldn\\'t find user for session:', sessionId);","      // Giving the wheel back to our bot","      cb();","    }","<<<<<<< HEAD","  },","  merge(sessionId, context, entities, message, cb) {","    ","    let local_query=extractEntity(entities,'local_search_query');","    ","      if(local_query)","      {","        switch (local_query) {","        case 'weather':","          context.intent=\"weather\";","          break;","        default:","          // context.intent=\"other_local\";","          // context.local_query=local_query;","          break;","      }","    }","    if(extractEntity(entities,\"location\")) context.location=extractEntity(entities,\"location\");","    console.log(\"context after\");","=======","","    console.log(\"context before action\");","    console.log(context);","  },","  merge(sessionId, context, entities, message, cb) {","    console.log(entities);","    if(context.search_result) delete context.search_result;","    if(context.intent) delete context.intent;","","    let local_query=extractEntity(entities,'local_search_query');","    let entertainment=extractEntity(entities,'entertainment');","      if(local_query)","      {","        if(local_query==\"weather\") context.intent=\"weather\";","        else context.intent=\"local_query\";","      }","      if(entertainment) context.intent=entertainment;","    if(extractEntity(entities,\"location\")) context.location=extractEntity(entities,\"location\");","    console.log(\"context after merge\");",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","    console.log(context);","    cb(context);","  },","  error(sessionId, context, error) {","    console.log(error.message);","<<<<<<< HEAD","  },","  // You should implement your custom actions here","  // See https://wit.ai/docs/quickstart","};","=======","  },['find-local'](sessionId, context, cb) {","    console.warn('firing find-local action');","    // Here should go the api call, e.g.:","    // context.forecast = apiCall(context.loc)","    if(context.intent==\"weather\")","    {","      // delete context.search_result;","      Func.weather(context.location,function(data){","        context.search_result=data.toString();","        console.log('searhc data set through weather event' + JSON.stringify(context));","        context.done=true;","        cb(context);","      });","    }","    else if(context.intent==\"local_query\")","    {","","    }","    else cb(context);","  },","  ['find-cinema'](sessionId,context,cb){","    Func.movieTheater(\"Chembur,Mumbai\",function(data){","      context.search_result=\"your moview list\";","      context.done=true;","","      fbMessage(sessions[sessionId].fbid, data,false, (err, data) => {","        if (err) {","          console.log(","            'Oops! An error occurred while forwarding the response to',","            sessions[sessionId].fbid,","            ':',","            err","          );","        }","    });","      console.log(data);","      cb(context);","    });","","  }","  // You should implement your custom actions here","  // See https://wit.ai/docs/quickstart","};","","const finshSession=(sID)=>","{","  console.log('deleting sessions');","  delete sessions[sID];","}",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","// Setting up our bot","const wit = new Wit(WIT_TOKEN, actions);","","","// Facebook Webhook","router.get('/webhook', function (req, res) {","    console.warn('authentication called');","    if (req.query['hub.verify_token'] === 'testbot_verify_token') {","        res.send(req.query['hub.challenge']);","    } else {","        res.send('Invalid verify token');","    }","});","","","// Message handler","<<<<<<< HEAD","app.post('/webhook', (req, res) => {","=======","router.post('/webhook', (req, res) => {",">>>>>>> f98c16104e9e75c78999289507bb699746c1bcdf","  // Parsing the Messenger API response","  console.log(\"reached in\");","  const messaging = getFirstMessagingEntry(req.body);","  if (messaging && messaging.message && messaging.recipient.id === FB_PAGE_ID) {","    // Yay! We got a new message!","","    // We retrieve the Facebook user ID of the sender","    const sender = messaging.sender.id;","","    // We retrieve the user's current session, or create one if it doesn't exist","    // This is needed for our bot to figure out the conversation history","    const sessionId = findOrCreateSession(sender);","","    // We retrieve the message content","    const msg = messaging.message.text;","    const atts = messaging.message.attachments;","","    if (atts) {","      // We received an attachment","","      // Let's reply with an automatic message","      fbMessage(","        sender,","        'Sorry I can only process text messages for now.',","        true","      );","    } else if (msg) {","      // We received a text message","","      // Let's forward the message to the Wit.ai Bot Engine","      // This will run all actions until our bot has nothing left to do","      wit.runActions(","        sessionId, // the user's current session","        msg, // the user's message","        sessions[sessionId].context, // the user's current session state","        (error, context) => {","          if (error) {","            console.log('Oops! Got an error from Wit:', error);","          } else {","            // Our bot did everything it has to do.","            // Now it's waiting for further messages to proceed.","            console.log('Waiting for futher messages.');","","            // Based on the session state, you might want to reset the session.","            // This depends heavily on the business logic of your bot.","            // Example:","            if (context['done']) {","              delete sessions[sessionId];","            }","","            // Updating the user's current session state","            sessions[sessionId].context = context;","          }","        }","      );","    }","  }","  res.sendStatus(200);","});","module.exports = router;","","",""],"id":3739},{"start":{"row":0,"column":0},"end":{"row":300,"column":0},"action":"insert","lines":["'use strict';","","const Wit=require('node-wit').Wit;","const express = require('express'),","      router = express.Router(),","      app=express(),","      request = require('request'),","      bodyParser=require('body-parser'),","      Func=require('./../class/func');","","","const FB_PAGE_ID=process.env.FB_PAGE_ID,","      FB_PAGE_TOKEN=process.env.FB_PAGE_TOKEN,","      WIT_TOKEN=process.env.WIT_TOKEN;","","const weather_dict=['weather','temp','temperature','rain'];","","// Messenger API specific code","","// See the Send API reference","// https://developers.facebook.com/docs/messenger-platform/send-api-reference","const fbReq = request.defaults({","  uri: 'https://graph.facebook.com/me/messages',","  method: 'POST',","  json: true,","  qs: { access_token: FB_PAGE_TOKEN },","  headers: {'Content-Type': 'application/json'},","});","","const fbMessage = (recipientId, msg,textOnly, cb) => {","var opts={};","if(textOnly)","{","  opts = {","    form: {","      recipient: {","        id: recipientId,","      },","      message: {","       text:msg","      },","    },","  };","}","else {","  console.log('executing 2nd opts');","  opts = {","    form: {","      recipient: {","        id: recipientId,","      },","      message: {","       msg","      },","    },","  };","}","  console.log(JSON.stringify(opts));","","  fbReq(opts, (err, resp, data) => {","    if (cb) {","      cb(err || data.error && data.error.message, data);","    }","  });","};","","","var extractEntity=function(entities,entity){","  const val = entities && entities[entity]","  && Array.isArray(entities[entity])","  && entities[entity].length > 0 &&","    entities[entity][0].value;","","    console.log('value is ' + val);","    if(val) return val;","    else return false;","","}","","// See the Webhook reference","// https://developers.facebook.com/docs/messenger-platform/webhook-reference","const getFirstMessagingEntry = (body) => {","  const val = body.object == 'page' &&","    body.entry &&","    Array.isArray(body.entry) &&","    body.entry.length > 0 &&","    body.entry[0] &&","    body.entry[0].id == FB_PAGE_ID &&","    body.entry[0].messaging &&","    Array.isArray(body.entry[0].messaging) &&","    body.entry[0].messaging.length > 0 &&","    body.entry[0].messaging[0]","  ;","  return val || null;","};","","// Wit.ai bot specific code","","// This will contain all user sessions.","// Each session has an entry:","// sessionId -> {fbid: facebookUserId, context: sessionState}","const sessions = {};","","const findOrCreateSession = (fbid) => {","  let sessionId;","  // Let's see if we already have a session for the user fbid","  Object.keys(sessions).forEach(k => {","    if (sessions[k].fbid === fbid) {","      // Yep, got it!","      sessionId = k;","    }","  });","  if (!sessionId) {","    // No session found for user fbid, let's create a new one","    sessionId = new Date().toISOString();","    sessions[sessionId] = {fbid: fbid, context: {}};","    console.log(\"new session created :\" + JSON.stringify(sessions));","  }","  return sessionId;","};","","// Our bot actions","const actions = {","  say(sessionId, context, message, cb) {","","","    // Our bot has something to say!","    // Let's retrieve the Facebook user whose session belongs to","    const recipientId = sessions[sessionId].fbid;","    if (recipientId) {","      // Yay, we found our recipient!","      // Let's forward our bot response to her.","      fbMessage(recipientId, message,true, (err, data) => {","        if (err) {","          console.log(","            'Oops! An error occurred while forwarding the response to',","            recipientId,","            ':',","            err","          );","        }","","        // Let's give the wheel back to our bot","        cb();","      });","    } else {","      console.log('Oops! Couldn\\'t find user for session:', sessionId);","      // Giving the wheel back to our bot","      cb();","    }","","    console.log(\"context before action\");","    console.log(context);","  },","  merge(sessionId, context, entities, message, cb) {","    console.log(entities);","    if(context.search_result) delete context.search_result;","    if(context.intent) delete context.intent;","","    let local_query=extractEntity(entities,'local_search_query');","    let entertainment=extractEntity(entities,'entertainment');","      if(local_query)","      {","        if(local_query==\"weather\") context.intent=\"weather\";","        else context.intent=\"local_query\";","      }","      if(entertainment) context.intent=entertainment;","    if(extractEntity(entities,\"location\")) context.location=extractEntity(entities,\"location\");","    console.log(\"context after merge\");","    console.log(context);","    cb(context);","  },","  error(sessionId, context, error) {","    console.log(error.message);","  },['find-local'](sessionId, context, cb) {","    console.warn('firing find-local action');","    // Here should go the api call, e.g.:","    // context.forecast = apiCall(context.loc)","    if(context.intent==\"weather\")","    {","      // delete context.search_result;","      Func.weather(context.location,function(data){","        context.search_result=data.toString();","        console.log('searhc data set through weather event' + JSON.stringify(context));","        context.done=true;","        cb(context);","      });","    }","    else if(context.intent==\"local_query\")","    {","","    }","    else cb(context);","  },","  ['find-cinema'](sessionId,context,cb){","    Func.movieTheater(\"Chembur,Mumbai\",function(data){","      context.search_result=\"your moview list\";","      context.done=true;","","      fbMessage(sessions[sessionId].fbid, data,false, (err, data) => {","        if (err) {","          console.log(","            'Oops! An error occurred while forwarding the response to',","            sessions[sessionId].fbid,","            ':',","            err","          );","        }","    });","      console.log(data);","      cb(context);","    });","","  }","  // You should implement your custom actions here","  // See https://wit.ai/docs/quickstart","};","","const finshSession=(sID)=>","{","  console.log('deleting sessions');","  delete sessions[sID];","}","// Setting up our bot","const wit = new Wit(WIT_TOKEN, actions);","","","// Facebook Webhook","router.get('/webhook', function (req, res) {","    console.warn('authentication called');","    if (req.query['hub.verify_token'] === 'testbot_verify_token') {","        res.send(req.query['hub.challenge']);","    } else {","        res.send('Invalid verify token');","    }","});","","","// Message handler","router.post('/webhook', (req, res) => {","  // Parsing the Messenger API response","  console.log(\"reached in\");","  const messaging = getFirstMessagingEntry(req.body);","  if (messaging && messaging.message && messaging.recipient.id === FB_PAGE_ID) {","    // Yay! We got a new message!","","    // We retrieve the Facebook user ID of the sender","    const sender = messaging.sender.id;","","    // We retrieve the user's current session, or create one if it doesn't exist","    // This is needed for our bot to figure out the conversation history","    const sessionId = findOrCreateSession(sender);","","    // We retrieve the message content","    const msg = messaging.message.text;","    const atts = messaging.message.attachments;","","    if (atts) {","      // We received an attachment","","      // Let's reply with an automatic message","      fbMessage(","        sender,","        'Sorry I can only process text messages for now.',","        true","      );","    } else if (msg) {","      // We received a text message","","      // Let's forward the message to the Wit.ai Bot Engine","      // This will run all actions until our bot has nothing left to do","      wit.runActions(","        sessionId, // the user's current session","        msg, // the user's message","        sessions[sessionId].context, // the user's current session state","        (error, context) => {","          if (error) {","            console.log('Oops! Got an error from Wit:', error);","          } else {","            // Our bot did everything it has to do.","            // Now it's waiting for further messages to proceed.","            console.log('Waiting for futher messages.');","","            // Based on the session state, you might want to reset the session.","            // This depends heavily on the business logic of your bot.","            // Example:","            if (context['done']) {","              delete sessions[sessionId];","            }","","            // Updating the user's current session state","            sessions[sessionId].context = context;","          }","        }","      );","    }","  }","  res.sendStatus(200);","});","module.exports = router;",""]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":4154,"scrollleft":0,"selection":{"start":{"row":300,"column":0},"end":{"row":300,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1465396558711,"hash":"3dd7cf7655407099ca81b1f32e18e324ed3dd567"}